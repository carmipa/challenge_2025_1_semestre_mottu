-- Gerado por Gemini, com base no arquivo mottu_ddl.txt fornecido (2025-05-08 23:22:53)
-- Objetivo: Criar o schema com todos os nomes de tabelas em MAIÚSCULAS,
--           renomear as tabelas de junção conforme sua convenção,
--           aplicar constraints e defaults discutidos,
--           e simplificar a chave primária da tabela TB_CLIENTE.

-- Nota: Este script assume um schema limpo. Adicione comandos DROP TABLE no início
-- se precisar executá-lo múltiplas vezes em um mesmo schema para testes.
-- Exemplo: DROP TABLE TB_CONTATOPATIO CASCADE CONSTRAINTS;

-- ==============================================
-- Criação das tabelas com nomes MAIÚSCULOS e nomes adotados para tabelas associativas
-- (Baseado nos comandos CREATE TABLE do início do arquivo mottu_ddl.txt fornecido)
-- ==============================================

CREATE TABLE TB_CONTATOPATIO ( -- Renomeada de t_cp
    tb_patio_id_patio     NUMBER NOT NULL,
    tb_contato_id_contato NUMBER NOT NULL
);

CREATE TABLE TB_ENDERECIOPATIO ( -- Renomeada de t_ep
    tb_endereco_id_endereco NUMBER NOT NULL,
    tb_patio_id_patio       NUMBER NOT NULL
);

CREATE TABLE TB_BOX ( -- Nome mantido, em maiúsculas
    id_box       NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome         VARCHAR2(50) NOT NULL,
    status       CHAR(1) NOT NULL,
    data_entrada DATE NOT NULL,
    data_saida   DATE NOT NULL,
    observacao   VARCHAR2(100)
);

CREATE TABLE TB_CLIENTE ( -- Nome mantido, em maiúsculas
    id_cliente              NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    data_cadastro           DATE NOT NULL,
    sexo                    CHAR(2) NOT NULL,
    nome                    VARCHAR2(100) NOT NULL,
    sobrenome               VARCHAR2(100) NOT NULL,
    data_nascimento         DATE NOT NULL,
    cpf                     CHAR(11) NOT NULL,
    profissao               VARCHAR2(50) NOT NULL,
    estado_civil            VARCHAR2(50) NOT NULL,
    tb_endereco_id_endereco NUMBER NOT NULL, -- Mantido como coluna, será FK
    tb_contato_id_contato   NUMBER NOT NULL -- Mantido como coluna, será FK
);

CREATE TABLE TB_CONTATO ( -- Nome mantido, em maiúsculas
    id_contato NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email      VARCHAR2(100) NOT NULL,
    ddd        NUMBER(4) NOT NULL,
    ddi        NUMBER(4) NOT NULL,
    telefone1  VARCHAR2(20) NOT NULL,
    telefone2  VARCHAR2(20),
    telefone3  VARCHAR2(20),
    celular    VARCHAR2(20) NOT NULL,
    outro      VARCHAR2(100),
    observacao VARCHAR2(200)
);

CREATE TABLE TB_CLIENTEVEICULO ( -- Renomeada de tb_cv
    tb_cliente_id_cliente              NUMBER NOT NULL, -- FK para TB_CLIENTE(id_cliente) - Referencia PK simplificada
    tb_cliente_tb_endereco_id_endereco NUMBER NOT NULL, -- Mantido como parte da PK composta DESSA tabela
    tb_cliente_tb_contato_id_contato   NUMBER NOT NULL, -- Mantido como parte da PK composta DESSA tabela
    tb_veiculo_id_veiculo              NUMBER NOT NULL -- FK para TB_VEICULO(id_veiculo)
);

CREATE TABLE TB_ENDERECO ( -- Nome mantido, em maiúsculas
    id_endereco NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    cep         CHAR(9) NOT NULL,
    numero      NUMBER(7) NOT NULL,
    logradouro  VARCHAR2(50) NOT NULL,
    bairro      VARCHAR2(50) NOT NULL,
    cidade      VARCHAR2(50) NOT NULL,
    estado      CHAR(2) NOT NULL,
    pais        VARCHAR2(50) NOT NULL,
    complemento VARCHAR2(60),
    observacao  VARCHAR2(200)
);

CREATE TABLE TB_PATIO ( -- Nome mantido, em maiúsculas
    id_patio     NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome_patio   VARCHAR2(50) NOT NULL,
    data_entrada DATE NOT NULL,
    data_saida   DATE NOT NULL,
    observacao   VARCHAR2(100)
);

-- Nota: mdsys.sdo_geometry requer que o usuário tenha Oracle Spatial habilitado/instalado
CREATE TABLE TB_RASTREAMENTO ( -- Nome mantido, em maiúsculas
    id_rastreamento NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    ips             mdsys.sdo_geometry NOT NULL,
    gprs            mdsys.sdo_geometry NOT NULL
);

CREATE TABLE TB_VEICULOBOX ( -- Renomeada de tb_vb
    tb_veiculo_id_veiculo NUMBER NOT NULL,
    tb_box_id_box         NUMBER NOT NULL
);

CREATE TABLE TB_VEICULO ( -- Nome mantido, em maiúsculas
    id_veiculo  NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    placa       VARCHAR2(10) NOT NULL,
    renavam     CHAR(11) NOT NULL,
    chassi      CHAR(17) NOT NULL,
    fabricante  VARCHAR2(50) NOT NULL,
    modelo      VARCHAR2(60) NOT NULL,
    motor       VARCHAR2(30),
    ano         NUMBER NOT NULL,
    combustivel VARCHAR2(20) NOT NULL
);

CREATE TABLE TB_VEICULOPATIO ( -- Renomeada de tb_vp
    tb_veiculo_id_veiculo NUMBER NOT NULL,
    tb_patio_id_patio     NUMBER NOT NULL
);

CREATE TABLE TB_VEICULORASTREAMENTO ( -- Renomeada de tb_vr
    tb_veiculo_id_veiculo           NUMBER NOT NULL,
    tb_rastreamento_id_rastreamento NUMBER NOT NULL
);

CREATE TABLE TB_VEICULOZONA ( -- Renomeada de tb_vz
    tb_veiculo_id_veiculo NUMBER NOT NULL,
    tb_zona_id_zona       NUMBER NOT NULL
);

CREATE TABLE TB_ZONABOX ( -- Renomeada de tb_zb
    tb_zona_id_zona NUMBER NOT NULL,
    tb_box_id_box   NUMBER NOT NULL
);

CREATE TABLE TB_ZONA ( -- Nome mantido, em maiúsculas
    id_zona      NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nome         VARCHAR2(50) NOT NULL,
    data_entrada DATE NOT NULL,
    data_saida   DATE NOT NULL,
    observacao   VARCHAR2(100)
);

CREATE TABLE TB_ZONAPATIO ( -- Renomeada de tb_zp
    tb_patio_id_patio NUMBER NOT NULL,
    tb_zona_id_zona   NUMBER NOT NULL
);

-- ==============================================
-- Adição de Primary Key Constraints (usando nomes de tabelas renomeadas/uppercase)
-- (Baseado nos ALTER TABLE ADD CONSTRAINT PK do arquivo mottu_ddl.txt fornecido)
-- ==============================================

ALTER TABLE TB_CONTATOPATIO ADD CONSTRAINT CONTATOPATIO_PK PRIMARY KEY ( tb_patio_id_patio, tb_contato_id_contato );
ALTER TABLE TB_ENDERECIOPATIO ADD CONSTRAINT ENDERECIOPATIO_PK PRIMARY KEY ( tb_endereco_id_endereco, tb_patio_id_patio );
ALTER TABLE TB_BOX ADD CONSTRAINT TB_BOX_PK PRIMARY KEY ( id_box );

-- MODIFICADO: Simplificando a PK de TB_CLIENTE para apenas ID_CLIENTE (desviando do DDL original fornecido)
ALTER TABLE TB_CLIENTE ADD CONSTRAINT TB_CLIENTE_PK PRIMARY KEY ( id_cliente );

ALTER TABLE TB_CONTATO ADD CONSTRAINT TB_CONTATO_PK PRIMARY KEY ( id_contato );
-- Mantendo a PK composta original para TB_CLIENTEVEICULO (antiga tb_cv)
ALTER TABLE TB_CLIENTEVEICULO ADD CONSTRAINT CLIENTEVEICULO_PK PRIMARY KEY ( tb_cliente_id_cliente, tb_cliente_tb_endereco_id_endereco, tb_cliente_tb_contato_id_contato, tb_veiculo_id_veiculo );
ALTER TABLE TB_ENDERECO ADD CONSTRAINT TB_ENDERECO_PK PRIMARY KEY ( id_endereco );
ALTER TABLE TB_PATIO ADD CONSTRAINT TB_PATIO_PK PRIMARY KEY ( id_patio );
ALTER TABLE TB_RASTREAMENTO ADD CONSTRAINT TB_RASTREAMENTO_PK PRIMARY KEY ( id_rastreamento );
ALTER TABLE TB_VEICULOBOX ADD CONSTRAINT VEICULOBOX_PK PRIMARY KEY ( tb_veiculo_id_veiculo, tb_box_id_box );
ALTER TABLE TB_VEICULO ADD CONSTRAINT TB_VEICULO_PK PRIMARY KEY ( id_veiculo );
ALTER TABLE TB_VEICULOPATIO ADD CONSTRAINT VEICULOPATIO_PK PRIMARY KEY ( tb_veiculo_id_veiculo, tb_patio_id_patio );
ALTER TABLE TB_VEICULORASTREAMENTO ADD CONSTRAINT VEICULORASTREAMENTO_PK PRIMARY KEY ( tb_veiculo_id_veiculo, tb_rastreamento_id_rastreamento );
ALTER TABLE TB_VEICULOZONA ADD CONSTRAINT VEICULOZONA_PK PRIMARY KEY ( tb_veiculo_id_veiculo, tb_zona_id_zona );
ALTER TABLE TB_ZONABOX ADD CONSTRAINT ZONABOX_PK PRIMARY KEY ( tb_zona_id_zona, tb_box_id_box );
ALTER TABLE TB_ZONA ADD CONSTRAINT TB_ZONA_PK PRIMARY KEY ( id_zona );
ALTER TABLE TB_ZONAPATIO ADD CONSTRAINT ZONAPATIO_PK PRIMARY KEY ( tb_patio_id_patio, tb_zona_id_zona );


-- ==============================================
-- Adição de Foreign Key Constraints (usando nomes de tabelas renomeadas/uppercase)
-- (Baseado nos ALTER TABLE ADD CONSTRAINT FK do arquivo mottu_ddl.txt fornecido, ajustando nomes e referências)
-- ==============================================

ALTER TABLE TB_CLIENTE
    ADD CONSTRAINT TB_CLIENTE_TB_CONTATO_FK FOREIGN KEY ( tb_contato_id_contato )
        REFERENCES TB_CONTATO ( id_contato );
ALTER TABLE TB_CLIENTE
    ADD CONSTRAINT TB_CLIENTE_TB_ENDERECO_FK FOREIGN KEY ( tb_endereco_id_endereco )
        REFERENCES TB_ENDERECO ( id_endereco );

-- MODIFICADO: FK de TB_CLIENTEVEICULO (antiga tb_cv) para TB_CLIENTE
-- Referencia a PK simplificada de TB_CLIENTE (apenas id_cliente)
ALTER TABLE TB_CLIENTEVEICULO
    ADD CONSTRAINT CLIENTEVEICULO_CLIENTE_FK FOREIGN KEY ( tb_cliente_id_cliente )
        REFERENCES TB_CLIENTE ( id_cliente ); -- Referencia PK simplificada
-- Mantém a FK para TB_VEICULO
ALTER TABLE TB_CLIENTEVEICULO
    ADD CONSTRAINT CLIENTEVEICULO_VEICULO_FK FOREIGN KEY ( tb_veiculo_id_veiculo )
        REFERENCES TB_VEICULO ( id_veiculo );

-- FKs para TB_VEICULOBOX (antiga tb_vb)
ALTER TABLE TB_VEICULOBOX
    ADD CONSTRAINT VEICULOBOX_BOX_FK FOREIGN KEY ( tb_box_id_box )
        REFERENCES TB_BOX ( id_box );
ALTER TABLE TB_VEICULOBOX
    ADD CONSTRAINT VEICULOBOX_VEICULO_FK FOREIGN KEY ( tb_veiculo_id_veiculo )
        REFERENCES TB_VEICULO ( id_veiculo );

-- FKs para TB_VEICULOPATIO (antiga tb_vp)
ALTER TABLE TB_VEICULOPATIO
    ADD CONSTRAINT VEICULOPATIO_PATIO_FK FOREIGN KEY ( tb_patio_id_patio )
        REFERENCES TB_PATIO ( id_patio );
ALTER TABLE TB_VEICULOPATIO
    ADD CONSTRAINT VEICULOPATIO_VEICULO_FK FOREIGN KEY ( tb_veiculo_id_veiculo )
        REFERENCES TB_VEICULO ( id_veiculo );

-- FKs para TB_VEICULORASTREAMENTO (antiga tb_vr)
ALTER TABLE TB_VEICULORASTREAMENTO
    ADD CONSTRAINT VEICULORASTREAMENTO_RASTREAMENTO_FK FOREIGN KEY ( tb_rastreamento_id_rastreamento )
        REFERENCES TB_RASTREAMENTO ( id_rastreamento );
ALTER TABLE TB_VEICULORASTREAMENTO
    ADD CONSTRAINT VEICULORASTREAMENTO_VEICULO_FK FOREIGN KEY ( tb_veiculo_id_veiculo )
        REFERENCES TB_VEICULO ( id_veiculo );

-- FKs para TB_VEICULOZONA (antiga tb_vz)
ALTER TABLE TB_VEICULOZONA
    ADD CONSTRAINT VEICULOZONA_VEICULO_FK FOREIGN KEY ( tb_veiculo_id_veiculo )
        REFERENCES TB_VEICULO ( id_veiculo );
ALTER TABLE TB_VEICULOZONA
    ADD CONSTRAINT VEICULOZONA_ZONA_FK FOREIGN KEY ( tb_zona_id_zona )
        REFERENCES TB_ZONA ( id_zona );

-- FKs para TB_ZONABOX (antiga tb_zb)
ALTER TABLE TB_ZONABOX
    ADD CONSTRAINT ZONABOX_BOX_FK FOREIGN KEY ( tb_box_id_box )
        REFERENCES TB_BOX ( id_box );
ALTER TABLE TB_ZONABOX
    ADD CONSTRAINT ZONABOX_ZONA_FK FOREIGN KEY ( tb_zona_id_zona )
        REFERENCES TB_ZONA ( id_zona );

-- FKs para TB_ZONAPATIO (antiga tb_zp)
ALTER TABLE TB_ZONAPATIO
    ADD CONSTRAINT ZONAPATIO_PATIO_FK FOREIGN KEY ( tb_patio_id_patio )
        REFERENCES TB_PATIO ( id_patio );
ALTER TABLE TB_ZONAPATIO
    ADD CONSTRAINT ZONAPATIO_ZONA_FK FOREIGN KEY ( tb_zona_id_zona )
        REFERENCES TB_ZONA ( id_zona );

-- FKs para TB_CONTATOPATIO (antiga t_cp)
ALTER TABLE TB_CONTATOPATIO
    ADD CONSTRAINT CONTATOPATIO_CONTATO_FK FOREIGN KEY ( tb_contato_id_contato )
        REFERENCES TB_CONTATO ( id_contato );
ALTER TABLE TB_CONTATOPATIO
    ADD CONSTRAINT CONTATOPATIO_PATIO_FK FOREIGN KEY ( tb_patio_id_patio )
        REFERENCES TB_PATIO ( id_patio );

-- FKs para TB_ENDERECIOPATIO (antiga t_ep)
ALTER TABLE TB_ENDERECIOPATIO
    ADD CONSTRAINT ENDERECIOPATIO_ENDERECO_FK FOREIGN KEY ( tb_endereco_id_endereco )
        REFERENCES TB_ENDERECO ( id_endereco );
ALTER TABLE TB_ENDERECIOPATIO
    ADD CONSTRAINT ENDERECIOPATIO_PATIO_FK FOREIGN KEY ( tb_patio_id_patio )
        REFERENCES TB_PATIO ( id_patio );


-- ==============================================
-- Adição de Constraints UNIQUE e CHECK e DEFAULT
-- (Baseado nos ALTER TABLE no final do arquivo mottu_ddl.txt fornecido, consolidado)
-- ==============================================

-- TB_CLIENTE
ALTER TABLE TB_CLIENTE MODIFY DATA_CADASTRO DATE DEFAULT SYSDATE;
ALTER TABLE TB_CLIENTE ADD CONSTRAINT CK_CLIENTE_DATA_NASC_MIN CHECK (DATA_NASCIMENTO >= TO_DATE('1900-01-01', 'YYYY-MM-DD'));
-- Nota: CK_CLIENTE_DATA_NASC_MAX (<= SYSDATE) e validação de idade 18+ devem ser feitas via TRIGGER ou APP
ALTER TABLE TB_CLIENTE ADD CONSTRAINT UK_CLIENTE_CPF UNIQUE (CPF);
ALTER TABLE TB_CLIENTE ADD CONSTRAINT CK_CLIENTE_SEXO CHECK (SEXO IN ('M', 'H'));
-- Adicione ou ajuste a lista de estados civis conforme necessário
ALTER TABLE TB_CLIENTE ADD CONSTRAINT CK_CLIENTE_ESTADO_CIVIL CHECK (ESTADO_CIVIL IN ('Solteiro', 'Casado', 'Divorciado', 'Viúvo', 'Separado', 'União Estável'));


-- TB_CONTATO
ALTER TABLE TB_CONTATO ADD CONSTRAINT CK_CONTATO_DDD_RANGE CHECK (DDD >= 11 AND DDD <= 99);
-- Nota: Validação completa de DDD/DDI e formato de telefone/email geralmente no Backend.

-- TB_VEICULO
ALTER TABLE TB_VEICULO ADD CONSTRAINT UK_VEICULO_CHASSI UNIQUE (CHASSI);
ALTER TABLE TB_VEICULO ADD CONSTRAINT UK_VEICULO_RENAVAM UNIQUE (RENAVAM);
ALTER TABLE TB_VEICULO ADD CONSTRAINT UK_VEICULO_PLACA UNIQUE (PLACA);

-- FIM DO SCRIPT